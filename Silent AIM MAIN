--[[
    Universal Silent Aim Framework
    Supports both PC and Mobile platforms
    Stable and reliable implementation
    
    GitHub: Slam0_Origin
    Usage: loadstring(game:HttpGet("https://raw.githubusercontent.com/Slamo-Origin/Silent-Aim-1.1-/main/Silent%20AIM%20MAIN", true))()

-- =============================================
-- CONFIGURATION
-- =============================================
local Config = {
    -- Aim Settings
    Prediction = 0.155,
    FOVRadius = 400,
    ToggleKey = "c", -- PC only
    
    -- Whitelist
    WhitelistedPlayers = {
        "Player1";
        "Player2";
        "Player3";
    },
    
    -- Visual Settings
    FOVColor = {
        Enabled = Color3.fromRGB(0, 200, 50),
        Disabled = Color3.fromRGB(200, 50, 50)
    },
    
    -- Mobile Settings
    MobileButtonPosition = UDim2.new(0, 20, 0, 100),
    MobileButtonSize = UDim2.new(0, 120, 0, 60),
    
    -- Advanced
    WallCheck = true,
    HealthCheck = true,
    TeamCheck = false
}

-- =============================================
-- SERVICES & VARIABLES
-- =============================================
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local Camera = Workspace.CurrentCamera

-- Platform Detection
local IsMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
local IsPC = not IsMobile

-- State Variables
local SilentAimEnabled = true
local CurrentTarget = nil
local FOVCircle = nil
local MobileGUI = nil

-- =============================================
-- UTILITY FUNCTIONS
-- =============================================
local function IsPlayerWhitelisted(player)
    for _, name in pairs(Config.WhitelistedPlayers) do
        if player.Name == name then
            return true
        end
    end
    return false
end

local function IsValidTarget(player)
    if not player or player == LocalPlayer then return false end
    if IsPlayerWhitelisted(player) then return false end
    if not player.Character then return false end
    
    local humanoid = player.Character:FindFirstChild("Humanoid")
    local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if not humanoid or not rootPart then return false end
    if Config.HealthCheck and humanoid.Health <= 0 then return false end
    
    return true
end

local function PerformWallCheck(targetPosition)
    if not Config.WallCheck then return true end
    
    local origin = Camera.CFrame.Position
    local direction = (targetPosition - origin).Unit * (targetPosition - origin).Magnitude
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
    
    local result = Workspace:Raycast(origin, direction, raycastParams)
    return not result or result.Distance > (targetPosition - origin).Magnitude - 3
end

-- =============================================
-- FOV CIRCLE MANAGEMENT
-- =============================================
local function CreateFOVCircle()
    if not Drawing then return end
    
    FOVCircle = Drawing.new("Circle")
    FOVCircle.Thickness = 2
    FOVCircle.NumSides = 50
    FOVCircle.Radius = Config.FOVRadius
    FOVCircle.Filled = false
    FOVCircle.Visible = true
    FOVCircle.ZIndex = 999
    FOVCircle.Transparency = 1
    FOVCircle.Color = Config.FOVColor.Enabled
end

local function UpdateFOVCircle()
    if not FOVCircle then return end
    
    if IsMobile then
        FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
    else
        FOVCircle.Position = Vector2.new(Mouse.X, Mouse.Y)
    end
    
    FOVCircle.Color = SilentAimEnabled and Config.FOVColor.Enabled or Config.FOVColor.Disabled
end

-- =============================================
-- MOBILE GUI SETUP WITH DRAG FUNCTIONALITY
-- =============================================
local function CreateMobileGUI()
    if not IsMobile then return end
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "SilentAimMobile"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Parent = ScreenGui
    ToggleButton.Size = Config.MobileButtonSize
    ToggleButton.Position = Config.MobileButtonPosition
    ToggleButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Text = "AIM: ON"
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.TextScaled = true
    ToggleButton.Font = Enum.Font.GothamBold
    
    -- Rounded corners
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 8)
    Corner.Parent = ToggleButton
    
    -- Drag functionality
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    ToggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = ToggleButton.Position
        end
    end)
    
    ToggleButton.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    ToggleButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            if dragging then
                dragging = false
                -- Only toggle if it wasn't a drag (minimal movement)
                local delta = input.Position - dragStart
                if math.abs(delta.X) < 10 and math.abs(delta.Y) < 10 then
                    SilentAimEnabled = not SilentAimEnabled
                    ToggleButton.Text = SilentAimEnabled and "AIM: ON" or "AIM: OFF"
                    ToggleButton.BackgroundColor3 = SilentAimEnabled and 
                        Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
                end
            end
        end
    end)
    
    MobileGUI = ScreenGui
end

-- =============================================
-- INPUT HANDLING
-- =============================================
local function SetupPCInput()
    if not IsPC then return end
    
    Mouse.KeyDown:Connect(function(key)
        if key:lower() == Config.ToggleKey:lower() then
            SilentAimEnabled = not SilentAimEnabled
        elseif key == "=" then
            -- Rejoin functionality
            TeleportService:Teleport(game.PlaceId, LocalPlayer)
        end
    end)
end

-- =============================================
-- TARGET SELECTION
-- =============================================
local function GetClosestTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge
    local mousePos = IsMobile and 
        Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2) or 
        Vector2.new(Mouse.X, Mouse.Y)
    
    for _, player in pairs(Players:GetPlayers()) do
        if IsValidTarget(player) then
            local character = player.Character
            local rootPart = character.HumanoidRootPart
            
            local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
            if onScreen then
                local distance = (mousePos - Vector2.new(screenPos.X, screenPos.Y)).Magnitude
                
                if distance < Config.FOVRadius and distance < shortestDistance then
                    if PerformWallCheck(rootPart.Position) then
                        closestPlayer = player
                        shortestDistance = distance
                    end
                end
            end
        end
    end
    
    CurrentTarget = closestPlayer
    return closestPlayer
end

-- =============================================
-- SILENT AIM HOOK
-- =============================================
local function SetupSilentAim()
    local oldIndex
    oldIndex = hookmetamethod(game, "__index", function(self, key)
        local result = oldIndex(self, key)
        
        if SilentAimEnabled and self == Mouse and key:lower() == "hit" then
            local target = GetClosestTarget()
            if target and target.Character then
                local rootPart = target.Character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    local velocity = rootPart.AssemblyLinearVelocity
                    local predictedPosition = rootPart.CFrame.Position + (velocity * Config.Prediction)
                    return CFrame.new(predictedPosition)
                end
            end
        end
        
        return result
    end)
end

-- =============================================
-- MAIN LOOP
-- =============================================
local function StartMainLoop()
    RunService.Heartbeat:Connect(function()
        UpdateFOVCircle()
        if SilentAimEnabled then
            GetClosestTarget()
        end
    end)
end

-- =============================================
-- INITIALIZATION
-- =============================================
local function Initialize()
    -- Disable console logs
    for _, connection in pairs(getconnections(game:GetService("LogService").MessageOut)) do
        connection:Disable()
    end
    
    -- Setup platform-specific features
    if IsMobile then
        CreateMobileGUI()
    else
        SetupPCInput()
    end
    
    -- Create FOV circle
    CreateFOVCircle()
    
    -- Setup silent aim
    SetupSilentAim()
    
    -- Start main loop
    StartMainLoop()
    
    print("Silent Aim Framework loaded successfully!")
    print("Platform:", IsMobile and "Mobile" or "PC")
end

-- =============================================
-- CLEANUP
-- =============================================
game.Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        if FOVCircle then
            FOVCircle:Remove()
        end
        if MobileGUI then
            MobileGUI:Destroy()
        end
    end
end)

-- Start the framework
Initialize()

